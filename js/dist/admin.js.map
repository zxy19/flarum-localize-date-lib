{"version":3,"file":"admin.js","mappings":";;;;;;;;;;;;;;;;;;;AAAmC;AACgC;AAEnEA,oEAAgB,CAACI,GAAG,CAAC,+BAA+B,EAAE,YAAM;EAC1DJ,qEAAiB,OACX,CAAC,wBAAwB,CAAC,CAC7BM,eAAe,CAAC;IACfC,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE,6BAA6B;IACtC,WAAS,KAAK;IACdC,KAAK,EAAET,kEAAc,CAACW,KAAK,CAAC,uCAAuC;EACrE,CAAC,CAAC;AACN,CAAC,CAAC;AACK,SAASC,gBAAgBA,CAACC,IAAS,EAAE;EAC1C,OAAOX,0DAAiB,CAACF,yDAAG,EAAEa,IAAI,CAAC;AACrC;AACO,SAASC,kBAAkBA,CAAA,EAAG;EACnC,OAAOb,4DAAmB,CAACD,yDAAG,CAAC;AACjC;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACO,SAASE,iBAAiBA,CAACF,GAAwC,EAAEa,IAAS,EAAO;EACxF,IAAME,QAAQ,GAAGf,GAAG,CAACgB,KAAK,CAACC,SAAS,CAAS,6BAA6B,CAAC;EAC3E,OAAOC,KAAK,CAACL,IAAI,CAAC,CAACM,EAAE,CAACJ,QAAQ,CAAC;AACnC;AACA;AACA;AACA;AACA;AACO,SAASd,mBAAmBA,CAACD,GAAwC,EAAE;EAC1E,IAAMe,QAAQ,GAAGf,GAAG,CAACgB,KAAK,CAACC,SAAS,CAAS,6BAA6B,CAAC;EAC3E,OAAOC,KAAK,CAACC,EAAE,CAAC,UAAU,EAAEJ,QAAQ,CAAC;AACzC;;;;;;;;;;;ACnBA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACN6B","sources":["webpack://@xypp/flarum-localize-date-lib/./src/admin/index.ts","webpack://@xypp/flarum-localize-date-lib/./src/common/index.ts","webpack://@xypp/flarum-localize-date-lib/external root \"flarum.core.compat['admin/app']\"","webpack://@xypp/flarum-localize-date-lib/webpack/bootstrap","webpack://@xypp/flarum-localize-date-lib/webpack/runtime/compat get default export","webpack://@xypp/flarum-localize-date-lib/webpack/runtime/define property getters","webpack://@xypp/flarum-localize-date-lib/webpack/runtime/hasOwnProperty shorthand","webpack://@xypp/flarum-localize-date-lib/webpack/runtime/make namespace object","webpack://@xypp/flarum-localize-date-lib/./admin.ts"],"sourcesContent":["import app from 'flarum/admin/app';\nimport { _serverDateChangeAt, _toServerTimezone } from '../common';\n\napp.initializers.add('xypp/flarum-localize-date-lib', () => {\n  app.extensionData\n    .for('xypp-localize-date-lib')\n    .registerSetting({\n      type: 'string',\n      setting: 'xypp.localize-date.timezone',\n      default: 'UTC',\n      label: app.translator.trans('xypp-localize-date-lib.admin.timezone'),\n    })\n});\nexport function toServerTimezone(time: any) {\n  return _toServerTimezone(app, time);\n}\nexport function serverDateChangeAt() {\n  return _serverDateChangeAt(app);\n}","import AdminApplication from \"flarum/admin/AdminApplication\";\r\nimport ForumApplication from \"flarum/forum/ForumApplication\";\r\n\r\n/**\r\n * convert time to server timezone\r\n * @param time Time format accept by dayjs\r\n * @returns dayjs object\r\n */\r\nexport function _toServerTimezone(app: ForumApplication | AdminApplication, time: any): any {\r\n    const timezone = app.forum.attribute<string>(\"xypp.localize-date.timezone\");\r\n    return dayjs(time).tz(timezone);\r\n}\r\n/**\r\n * Get the time when server date will change in local timezone.\r\n * @returns dayjs object\r\n */\r\nexport function _serverDateChangeAt(app: ForumApplication | AdminApplication) {\r\n    const timezone = app.forum.attribute<string>(\"xypp.localize-date.timezone\");\r\n    return dayjs.tz(\"00:00:00\", timezone);\r\n}","module.exports = flarum.core.compat['admin/app'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/common';\nexport * from './src/admin';\n"],"names":["app","_serverDateChangeAt","_toServerTimezone","initializers","add","extensionData","registerSetting","type","setting","label","translator","trans","toServerTimezone","time","serverDateChangeAt","timezone","forum","attribute","dayjs","tz"],"sourceRoot":""}